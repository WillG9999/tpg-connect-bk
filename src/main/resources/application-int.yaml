# Connect Dating Application - Integration Environment Configuration
# Used for integration testing with external services - requires real email verification

spring:
  config:
    activate:
      on-profile: int

# Feature Flags - Integration Environment (Selective testing)
app:
  features:
    email-verification: true       # Enable for integration testing with real emails
    email-service: true           # Enable email service for integration testing
    push-notifications: true      # Enable push notifications for testing
    premium-features: true        # Enable premium features for full integration tests
    admin-features: true          # Enable admin features for testing
    realtime-messaging: true      # Enable real-time features for testing
    analytics: false              # Disable analytics to reduce noise
    file-uploads: true            # Enable file uploads for testing
    social-sharing: false         # Disable social sharing in integration
    safety-features: true         # Enable safety features for testing
  
  # Development Settings
  dev:
    expose-reset-tokens: true     # Expose tokens for integration testing

# Email Configuration - Real email service but with test settings
email:
  enabled: true
  provider: smtp
  from-email: ${EMAIL_FROM_EMAIL}
  from-name: Connect Dating App - Integration
  
  # Gmail SMTP Settings
  smtp-host: smtp.gmail.com
  smtp-port: 587
  username: ${EMAIL_USERNAME}
  password: ${EMAIL_PASSWORD:changeme}
  authentication-enabled: true
  start-tls-enabled: true
  ssl-enabled: false
  
  # Email Settings - More relaxed timeouts for integration
  connection-timeout: 45000
  read-timeout: 45000
  max-retries: 5
  debug-enabled: true

# Logging Configuration - Balanced for integration testing
logging:
  level:
    root: INFO
    com.tpg.connect: DEBUG
    org.springframework.web: INFO

# Firebase Configuration - Integration database
firebase:
  config:
    path: ${FIREBASE_CONFIG_PATH}
  database:
    url: ${FIREBASE_DATABASE_URL}
  storage:
    bucket: ${FIREBASE_STORAGE_BUCKET}
  project:
    id: ${FIREBASE_PROJECT_ID}

# Google Cloud Storage - Integration
gcp:
  project:
    id: ${FIREBASE_PROJECT_ID}
  storage:
    bucket: ${FIREBASE_STORAGE_BUCKET}
    credentials:
      location: ${GCP_CREDENTIALS_PATH}