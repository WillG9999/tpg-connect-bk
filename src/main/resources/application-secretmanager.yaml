# Connect Dating Application - Google Secret Manager Configuration
# This profile enables Google Cloud Secret Manager integration
# Use this profile when you want to fetch secrets from GCP Secret Manager

spring:
  config:
    activate:
      on-profile: secretmanager
  
  # Google Cloud Configuration
  cloud:
    gcp:
      project-id: ${GOOGLE_CLOUD_PROJECT}
      credentials:
        location: ${GOOGLE_APPLICATION_CREDENTIALS:classpath:gcp-credentials.json}
      secretmanager:
        enabled: true

# Secret Manager Configuration
app:
  secret-manager:
    enabled: true
    prefix: ${SECRET_MANAGER_PREFIX:connect-app}
  
# Override JWT configuration to use Secret Manager
jwt:
  secret: ${sm://jwt-secret}  # Secret Manager syntax

# Override email configuration to use Secret Manager  
email:
  password: ${sm://email-password}  # Secret Manager syntax
  username: ${EMAIL_USERNAME}
  from-email: ${EMAIL_FROM_EMAIL}

# Firebase configuration using Secret Manager
firebase:
  config:
    # For Secret Manager, we can store the entire JSON as a secret
    json: ${sm://firebase-service-account}  # Secret Manager syntax
  project:
    id: ${FIREBASE_PROJECT_ID}
  database:
    url: ${FIREBASE_DATABASE_URL}
  storage:
    bucket: ${FIREBASE_STORAGE_BUCKET}

# Logging for Secret Manager
logging:
  level:
    com.tpg.connect.config.SecretManagerConfig: DEBUG
    com.google.cloud.secretmanager: INFO

# Instructions for Secret Manager setup:
# 1. Create secrets in Google Cloud Console:
#    - connect-app-jwt-secret
#    - connect-app-email-password  
#    - connect-app-firebase-service-account
#    - connect-app-database-url (if using external DB)
#
# 2. Grant your service account Secret Manager Secret Accessor role:
#    gcloud projects add-iam-policy-binding PROJECT_ID \
#      --member="serviceAccount:YOUR_SERVICE_ACCOUNT@PROJECT_ID.iam.gserviceaccount.com" \
#      --role="roles/secretmanager.secretAccessor"
#
# 3. Set environment variables:
#    export GOOGLE_CLOUD_PROJECT=your-project-id
#    export GOOGLE_APPLICATION_CREDENTIALS=/path/to/service-account.json
#
# 4. Run with Secret Manager profile:
#    java -Dspring.profiles.active=prod,secretmanager -jar your-app.jar