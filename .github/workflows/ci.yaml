name: Build Images${{ inputs.tag_name && format(' - v{0}', inputs.tag_name) || '' }}

run-name: Build v${{ inputs.tag_name || 'latest' }} üöÄ

on:
  workflow_call:
    inputs:
      tag_name:
        description: 'Tag name to build'
        required: true
        type: string
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Tag name to build'
        required: true
        type: string

env:
  JAVA_VERSION: '21'
  JAVA_DISTRIBUTION: 'temurin'

jobs:
  build:
    name: Build and Push Image - ${{ inputs.tag_name || 'latest' }}
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
    
    steps:
    - name: Get build version
      id: version
      run: |
        # Get tag from input
        VERSION="${{ inputs.tag_name }}"
        if [ "${{ github.event_name }}" = "workflow_call" ]; then
          echo "üîó Workflow call triggered for version: $VERSION"
        else
          echo "üìã Manual workflow dispatch for version: $VERSION"
        fi
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "üè∑Ô∏è Building container image for version: $VERSION"
        
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: ${{ steps.version.outputs.version }}  # Checkout the specific tag
      
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: ${{ env.JAVA_DISTRIBUTION }}
        
    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY_INT }}
        
    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
      
    - name: Configure Docker for GCR
      run: gcloud auth configure-docker gcr.io
          
    - name: Build and push with Jib
      run: |
        echo "üî® Building image: gcr.io/connect-ea4c2-int/connect-backend:${{ steps.version.outputs.version }}"
        mvn clean compile jib:build \
          -Djib.to.image=gcr.io/connect-ea4c2-int/connect-backend:${{ steps.version.outputs.version }} \
          -Djib.to.tags=latest,${{ steps.version.outputs.version }} \
          -DGCP_PROJECT_ID=connect-ea4c2-int \
          -DskipTests=true
        echo "‚úÖ Image built and pushed successfully"
          
  call-deploy-workflow:
    name: Deploy to Integration
    needs: build
    uses: ./.github/workflows/deploy-int.yaml
    with:
      tag_name: ${{ needs.build.outputs.version }}
    secrets: inherit