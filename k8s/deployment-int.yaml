apiVersion: apps/v1
kind: Deployment
metadata:
  name: connect-backend-int
  namespace: connect-int
  labels:
    app: connect-backend
    environment: int
    version: v1
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: connect-backend
      environment: int
  template:
    metadata:
      labels:
        app: connect-backend
        environment: int
        version: v1
    spec:
      serviceAccountName: connect-backend-int
      securityContext:
        runAsNonRoot: true
        runAsUser: 65532
        fsGroup: 65532
      containers:
      - name: connect-backend
        image: gcr.io/connect-ea4c2/connect-backend:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        env:
        - name: SPRING_PROFILES_ACTIVE
          value: "int"
        - name: SERVER_PORT
          value: "8080"
        - name: ENVIRONMENT
          value: "integration"
        # All secrets come from Google Secret Manager via Spring Cloud GCP
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /api/health/live
            port: 8080
          initialDelaySeconds: 90
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /api/health/ready
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /api/health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 18
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  name: connect-backend-service-int
  namespace: connect-int
  labels:
    app: connect-backend
    environment: int
spec:
  type: LoadBalancer
  ports:
  - port: 80
    targetPort: 8080
    protocol: TCP
    name: http
  selector:
    app: connect-backend
    environment: int
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: connect-backend-ingress-int
  namespace: connect-int
  annotations:
    kubernetes.io/ingress.class: "gce"
    kubernetes.io/ingress.global-static-ip-name: "connect-backend-int-ip"
    networking.gke.io/managed-certificates: "connect-backend-int-ssl"
    kubernetes.io/ingress.allow-http: "false"
spec:
  rules:
  - host: int-api.connect-app.com
    http:
      paths:
      - path: /*
        pathType: ImplementationSpecific
        backend:
          service:
            name: connect-backend-service-int
            port:
              number: 80